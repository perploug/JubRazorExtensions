<?xml version="1.0"?>
<hive>
  <available-providers>
    <readers />
    <writers>
      <add key="nhibernate" type="Umbraco.Framework.Persistence.NHibernate.EntityRepositoryFactory, Umbraco.Framework.Persistence.NHibernate" providerConfig="umbraco/persistenceProviderSettings/nhibernate">
        <revisioning type="Umbraco.Framework.Persistence.NHibernate.RevisionRepositoryFactory, Umbraco.Framework.Persistence.NHibernate" providerConfig="" />
        <schema type="Umbraco.Framework.Persistence.NHibernate.SchemaRepositoryFactory, Umbraco.Framework.Persistence.NHibernate" providerConfig="" />
      </add>
      <!--<add key="examine" type="Umbraco.Framework.Examine.Hive.EntityRepositoryFactory, Umbraco.Framework.Examine" providerConfig="umbraco/persistenceProviderSettings/examine">
        <revisioning type="Umbraco.Framework.Persistence.Examine.Hive.RevisionRepositoryFactory, Umbraco.Framework.Persistence.Examine" providerConfig="" />
        <schema type="Umbraco.Framework.Persistence.Examine.Hive.SchemaRepositoryFactory, Umbraco.Framework.Persistence.Examine" providerConfig="" />
      </add>-->
      <!--<add key="membership" type="Umbraco.Hive.Providers.Membership.Hive.EntityRepositoryFactory, Umbraco.Hive.Providers.Membership" providerConfig="umbraco/membership">      
        --><!--<schema type="Umbraco.Hive.Providers.Membership.Hive.SchemaRepositoryFactory, Umbraco.Hive.Providers.Membership" providerConfig="" />--><!--
      </add>-->
      <add key="templates" type="Umbraco.Hive.Providers.IO.EntityRepositoryFactory, Umbraco.Hive.Providers.IO" providerConfig="umbraco/fileSystemProviderSettings/templates" />
      <add key="partials" type="Umbraco.Hive.Providers.IO.EntityRepositoryFactory, Umbraco.Hive.Providers.IO" providerConfig="umbraco/fileSystemProviderSettings/partials" />
      <add key="file-uploader" type="Umbraco.Hive.Providers.IO.EntityRepositoryFactory, Umbraco.Hive.Providers.IO" providerConfig="umbraco/fileSystemProviderSettings/file-uploader" />
      <add key="scripts" type="Umbraco.Hive.Providers.IO.EntityRepositoryFactory, Umbraco.Hive.Providers.IO" providerConfig="umbraco/fileSystemProviderSettings/scripts" />
      <add key="stylesheets" type="Umbraco.Hive.Providers.IO.EntityRepositoryFactory, Umbraco.Hive.Providers.IO" providerConfig="umbraco/fileSystemProviderSettings/stylesheets" />
      <add key="macros" type="Umbraco.Hive.Providers.IO.EntityRepositoryFactory, Umbraco.Hive.Providers.IO" providerConfig="umbraco/fileSystemProviderSettings/macros" />
      <add key="macro-partials" type="Umbraco.Hive.Providers.IO.EntityRepositoryFactory, Umbraco.Hive.Providers.IO" providerConfig="umbraco/fileSystemProviderSettings/macro-partials" />
      <add key="stubs" type="Umbraco.Hive.Providers.IO.EntityRepositoryFactory, Umbraco.Hive.Providers.IO" providerConfig="umbraco/fileSystemProviderSettings/stubs" />
    </writers>
  </available-providers>
 
  <provider-groups>  
    <clear />
    <group key="default">
      <readers>
        <use provider="nhibernate" ordinal="1" propagateReadMissesToWriters="true" />
      </readers>
      <read-writers>
        <use provider="nhibernate" ordinal="0" isPassthrough="false" />
      </read-writers>
      <uri-matches>
        <match uri="system://" />
        <match uri="content://" />
        <match uri="media://" />
        <match uri="security://" />
        <match uri="dictionary://" />
      </uri-matches>
    </group>

    <group key="file-uploads">
        <readers>
          <use provider="file-uploader" ordinal="0"/>
        </readers>
        <read-writers>
          <use provider="file-uploader" ordinal="0" />
        </read-writers>
      <uri-matches>
        <match uri="storage://file-uploader/" />
      </uri-matches>
    </group>
    <group key="stylesheets">
        <readers>
          <use provider="stylesheets" ordinal="0" />
        </readers>
        <read-writers>
          <use provider="stylesheets" ordinal="0" />
        </read-writers>
      <uri-matches>
        <match uri="storage://stylesheets/" />
      </uri-matches>
    </group>
    <group key="scripts">
        <readers>
          <use provider="scripts" ordinal="0" />
        </readers>
        <read-writers>
          <use provider="scripts" ordinal="0" />
        </read-writers>
      <uri-matches>
        <match uri="storage://scripts/" />
      </uri-matches>
    </group>
    <group key="templates">
      <readers>
        <use provider="templates" ordinal="0" />
      </readers>
      <read-writers>
        <use provider="templates" ordinal="0" />
      </read-writers>
      <uri-matches>
        <match uri="storage://templates/" />
      </uri-matches>
    </group>
    <group key="partials">
      <readers>
        <use provider="partials" ordinal="0" />
      </readers>
      <read-writers>
        <use provider="partials" ordinal="0" />
      </read-writers>
      <uri-matches>
        <match uri="storage://partials/" />
      </uri-matches>
    </group>
    <group key="macros">
        <readers>
          <use provider="macros" ordinal="0" />
        </readers>
        <read-writers>
          <use provider="macros" ordinal="0" />
        </read-writers>
      <uri-matches>
        <match uri="storage://macros/" />
      </uri-matches>
    </group>
    <group key="macro-partials">
      <readers>
        <use provider="macro-partials" ordinal="0" />
      </readers>
      <read-writers>
        <use provider="macro-partials" ordinal="0" />
      </read-writers>
      <uri-matches>
        <match uri="storage://macro-partials/" />
      </uri-matches>
    </group>
    <group key="stubs">
      <readers>
        <use provider="stubs" ordinal="0" />
      </readers>
      <read-writers>
        <use provider="stubs" ordinal="0" />
      </read-writers>
      <uri-matches>
        <match uri="storage://stubs/" />
      </uri-matches>
    </group>
  </provider-groups>
</hive>
