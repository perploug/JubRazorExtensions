(function (a) { function l(b) { var c = a(b), e = c.data(d); if (!e) { e = { options: { errorClass: "input-validation-error", errorElement: "span", errorPlacement: a.proxy(i, b), invalidHandler: a.proxy(j, b), messages: {}, rules: {}, success: a.proxy(k, b) }, attachValidation: function () { c.validate(this.options) }, validate: function () { c.validate(); return c.valid() } }; c.data(d, e) } return e } function k(b) { var c = b.data("unobtrusiveContainer"), d = a.parseJSON(c.attr("data-valmsg-replace")); if (c) { c.addClass("field-validation-valid").removeClass("field-validation-error"); b.removeData("unobtrusiveContainer"); if (d) { c.empty() } } } function j(b, c) { var d = a(this).find("[data-valmsg-summary=true]"), e = d.find("ul"); if (e && e.length && c.errorList.length) { e.empty(); d.addClass("validation-summary-errors").removeClass("validation-summary-valid"); a.each(c.errorList, function () { a("<li />").html(this.message).appendTo(e) }) } } function i(b, c) { var d = a(this).find("[data-valmsg-for='" + c[0].name + "']"), e = a.parseJSON(d.attr("data-valmsg-replace")) !== false; d.removeClass("field-validation-valid").addClass("field-validation-error"); b.data("unobtrusiveContainer", d); if (e) { d.empty(); b.removeClass("input-validation-error").appendTo(d) } else { b.hide() } } function h(a, b) { if (a.indexOf("*.") === 0) { a = a.replace("*.", b) } return a } function g(a) { return a.substr(0, a.lastIndexOf(".") + 1) } function f(a) { return a.replace(/^\s+|\s+$/g, "").split(/\s*,\s*/g) } function e(a, b, c) { a.rules[b] = c; if (a.message) { a.messages[b] = a.message } } var b = a.validator, c, d = "unobtrusiveValidation"; b.unobtrusive = { adapters: [], parseElement: function (b, c) { var d = a(b), e = d.parents("form")[0], f, g, h; if (!e) { return } f = l(e); f.options.rules[b.name] = g = {}; f.options.messages[b.name] = h = {}; a.each(this.adapters, function () { var c = "data-val-" + this.name, f = d.attr(c), i = {}; if (f !== undefined) { c += "-"; a.each(this.params, function () { i[this] = d.attr(c + this) }); this.adapt({ element: b, form: e, message: f, params: i, rules: g, messages: h }) } }); if (!c) { f.attachValidation() } }, parse: function (c) { a(c).find(":input[data-val=true]").each(function () { b.unobtrusive.parseElement(this, true) }); a("form").each(function () { var a = l(this); if (a) { a.attachValidation() } }) } }; c = b.unobtrusive.adapters; c.add = function (a, b, c) { if (!c) { c = b; b = [] } this.push({ name: a, params: b, adapt: c }); return this }; c.addBool = function (a, b) { return this.add(a, function (c) { e(c, b || a, true) }) }; c.addMinMax = function (a, b, c, d, f, g) { return this.add(a, [f || "min", g || "max"], function (a) { var f = a.params.min, g = a.params.max; if (f && g) { e(a, d, [f, g]) } else if (f) { e(a, b, f) } else if (g) { e(a, c, g) } }) }; c.addSingleVal = function (a, b, c) { return this.add(a, [b || "val"], function (d) { e(d, c || a, d.params[b]) }) }; b.addMethod("regex", function (a, b, c) { var d; if (this.optional(b)) { return true } d = (new RegExp(c)).exec(a); return d && d.index === 0 && d[0].length === a.length }); c.addSingleVal("accept", "exts").addSingleVal("regex", "pattern"); c.addBool("creditcard").addBool("date").addBool("digits").addBool("email").addBool("number").addBool("url"); c.addMinMax("length", "minlength", "maxlength", "rangelength").addMinMax("range", "min", "max", "range"); c.add("equalto", ["other"], function (b) { var c = g(b.element.name), d = b.params.other, f = h(d, c), i = a(b.form).find(":input[name=" + f.replace(".", "\\.") + "]")[0]; e(b, "equalTo", i) }); c.add("required", function (a) { if (a.element.tagName.toUpperCase() !== "INPUT" || a.element.type.toUpperCase() !== "CHECKBOX") { e(a, "required", true) } }); c.add("remote", ["url", "type", "fields"], function (b) { var c = { url: b.params.url, type: b.params.type || "GET", data: {} }, d = g(b.element.name); a.each(f(b.params.fields || b.element.name), function (e, f) { var g = h(f, d); c.data[g] = function () { return a(b.form).find(":input[name='" + g + "']").val() } }); e(b, "remote", c) }); a(function () { b.unobtrusive.parse(document) }) })(jQuery)